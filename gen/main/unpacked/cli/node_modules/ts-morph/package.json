{
  "_from": "ts-morph",
  "_id": "ts-morph@15.1.0",
  "_inBundle": false,
  "_integrity": "sha512-RBsGE2sDzUXFTnv8Ba22QfeuKbgvAGJFuTN7HfmIRUkgT/NaVLfDM/8OFm2NlFkGlWEXdpW5OaFIp1jvqdDuOg==",
  "_location": "/ts-morph",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "ts-morph",
    "name": "ts-morph",
    "escapedName": "ts-morph",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ts-morph/-/ts-morph-15.1.0.tgz",
  "_shasum": "53deea5296d967ff6eba8f15f99d378aa7074a4e",
  "_spec": "ts-morph",
  "_where": "/home/ortho/Desktop/projects/intellij/IntelliJPlugin/gen/main/unpacked/cli",
  "author": {
    "name": "David Sherret"
  },
  "browser": {
    "fs": false,
    "os": false,
    "fs.realpath": false,
    "mkdirp": false,
    "dir-glob": false,
    "graceful-fs": false,
    "fast-glob": false,
    "source-map-support": false,
    "glob-parent": false,
    "glob": false
  },
  "bugs": {
    "url": "https://github.com/dsherret/ts-morph/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@ts-morph/common": "~0.16.0",
    "code-block-writer": "^11.0.0"
  },
  "deprecated": false,
  "description": "TypeScript compiler wrapper for static analysis and code manipulation.",
  "devDependencies": {
    "@types/chai": "^4.3.1",
    "@types/diff": "^5.0.2",
    "@types/mocha": "^9.1.1",
    "@types/node": "^17.0.39",
    "chai": "^4.3.6",
    "conditional-type-checks": "^1.0.5",
    "cross-env": "^7.0.3",
    "diff": "^5.1.0",
    "mocha": "10.0.0",
    "rimraf": "^3.0.2",
    "rollup": "^2.75.5",
    "rollup-plugin-typescript2": "^0.32.0",
    "ts-node": "10.8.1",
    "typescript": "~4.7.3"
  },
  "homepage": "https://github.com/dsherret/ts-morph#readme",
  "keywords": [
    "typescript",
    "ast",
    "static analysis",
    "code generation",
    "code refactor"
  ],
  "license": "MIT",
  "main": "dist/ts-morph.js",
  "name": "ts-morph",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dsherret/ts-morph.git"
  },
  "scripts": {
    "build": "npm run build:declarations && npm run build:deno && npm run build:node",
    "build:declarations": "deno run -A scripts/generation/main.ts create-declaration-file",
    "build:deno": "rimraf dist-deno && rollup -c --environment BUILD:deno && deno run -A scripts/buildDeno.ts",
    "build:node": "rimraf dist && rollup -c ",
    "code-generate": "deno run -A scripts/generation/main.ts",
    "code-verification": "deno run -A scripts/verification/main.ts ensure-structures-match-classes ensure-overload-structures-match ensure-array-inputs-readonly ensure-classes-implement-structure-methods ensure-mixin-not-applied-multiple-times validate-public-api-class-member-names validate-compiler-node-to-wrapped-type validate-code-fences",
    "dopublish": "npm run type-check-docs && npm run package && npm run publish-code-verification && echo \"Run: npm publish --otp\"",
    "ensure-array-inputs-readonly": "deno run -A scripts/verification/main ensure-array-inputs-readonly.ts",
    "ensure-no-declaration-file-errors": "deno run -A scripts/verification/ensureNoDeclarationFileErrors.ts",
    "ensure-no-project-compile-errors": "deno run -A scripts/verification/ensureNoProjectCompileErrors.ts",
    "ensure-or-throw-exists": "deno run -A scripts/verification/main ensure-or-throw-exists.ts",
    "ensure-overload-structures-match": "deno run -A scripts/verification/main.ts ensure-overload-structures-match",
    "ensure-structures-match-classes": "deno run -A scripts/verification/main.ts ensure-structures-match-classes",
    "output-wrapped-nodes": "deno run -A scripts/generation/outputWrappedNodesInfo.ts",
    "package": "npm run build",
    "publish-code-verification": "npm run code-verification && npm run ensure-no-declaration-file-errors",
    "test": "cross-env TS_NODE_TRANSPILE_ONLY=\"true\" mocha",
    "test:ci": "npm run test",
    "test:debug": "npm run test --inspect-brk",
    "test:ts-versions": "deno run -A scripts/test/testTypeScriptVersions.ts",
    "test:watch": "npm run test --watch-extensions ts --watch",
    "type-check": "deno run -A scripts/typeCheckLibrary.ts",
    "type-check-docs": "deno run -A scripts/typeCheckDocumentation.ts"
  },
  "standard-version": {
    "tagPrefix": "",
    "skip": {
      "tag": true,
      "commit": true
    }
  },
  "typings": "lib/ts-morph.d.ts",
  "version": "15.1.0"
}
